{% extends "commerce/_layouts/settingscp" %}

{% set crumbs = [
{ label: 'Commerce Settings'|t, url: url('commerce/settings/orderstatuses') }
] %}


{% set selectedTab = 'settings' %}
{% import "_includes/forms" as forms %}

{% set content %}
<form method="post" accept-charset="UTF-8" data-saveshortcut>
    <input type="hidden" name="action" value="commerce/orderStatus/save">
    <input type="hidden" name="redirect" value="commerce/settings/orderstatuses">

    {{ getCsrfInput() }}
    {% if orderStatus.id %}<input type="hidden" name="orderStatusId" value="{{ orderStatus.id }}">{% endif %}

    {{ forms.textField({
        label: "Name"|t,
        first: true,
        instructions: "What this status will be called in the CP."|t,
        id: 'name',
        name: 'name',
        value: orderStatus.name,
        errors: orderStatus.getErrors('name'),
        required: true
    }) }}

    {{ forms.textField({
        label: "Handle"|t,
        instructions: "How you’ll refer to this status in the templates."|t,
        id: 'handle',
        class: 'code',
        name: 'handle',
        value: orderStatus.handle,
        errors: orderStatus.getErrors('handle'),
        required: true
    }) }}

    {{ forms.hidden({
        id: 'color',
        name: 'color',
        value: orderStatus.color
    }) }}

    {% set colorField %}
    <div>
        <a id="colorMenuBtn" class="btn menubtn" href="#"><span class="commerce status {{ orderStatus.color }}"></span>{{ orderStatus.color|t|title }}</a>
        <div class="menu">
            <ul class="padded">
                {% for color in ['green','orange', 'red', 'blue', 'yellow', 'pink', 'purple', 'turquoise', 'light', 'grey', 'black'] %}
                <li><a data-val="{{ color }}" {% if orderStatus.color == color %}class="sel"{% endif %} href="#"><span class="commerce status {{ color }}"></span>{{ color|t|title }}</a></li>
                {% endfor %}
            </ul>
        </div>
    </div>
    {% endset %}
    {{ forms.field({
        label: 'Color'|t,
        instructions: 'Choose a color to represent the order’s status'|t
    },colorField) }}


    {{ forms.multiselectField({
        label: 'Status Emails'|t,
        instructions: 'The emails that will be sent when transitioning to this status'|t,
        id: 'emails',
        name: 'emails',
        options: emails,
        values: emailsIds is defined ? emailsIds : orderStatus.getEmailsIds(),
        errors: orderStatus.getErrors('emails'),
    }) }}

    {{ forms.checkboxField({
        label: "New orders get this status by default"|t,
        name: 'default',
        value: 1,
        checked: orderStatus.default,
        errors: orderStatus.getErrors('default')
    }) }}

    <div class="buttons">
        <input type="submit" class="btn submit" value="{{ 'Save'|t }}">
    </div>
</form>

{% endset %}

{% set js %}
{% if not orderStatus.handle %}new Craft.HandleGenerator('#name', '#handle');{% endif %}
$(function () {

    $colorSelect = $('#colorMenuBtn');
    new Garnish.MenuBtn($colorSelect, {
        onOptionSelect: function(data){
            var val = $(data).data('val');
            $('#color').val(val);
            var html = "<span class='commerce status "+val+"'></span>"+Craft.uppercaseFirst(val);
            $colorSelect.html(html);
        }
    });


    $('#emails').selectize({
        plugins: ['remove_button'],
        dropdownParent: 'body'
    });
});
{% endset %}
{% includeJs js %}